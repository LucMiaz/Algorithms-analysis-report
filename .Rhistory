lin <- lm(y~x, fr)
lin$coefficients
lin$fitted.values
lin$model
summary(lin)
plot(y~x, fr, xlab="Part des exploitations biologiques en 2013", ylab="Part des voix pour les Verts aux élections du Conseil National de 2011")
plot(y~x, fr, xlab="Part des exploitations biologiques en 2013", ylab="Part des voix pour les Verts aux élections du Conseil National de 2011", asp="2")
plot(y~x, fr, xlab="Part des exploitations biologiques en 2013", ylab="Part des voix pour les Verts aux élections du Conseil National de 2011", asp="0.5")
plot(y~x, fr, xlab="Part des exploitations biologiques en 2013", ylab="Part des voix pour les Verts aux élections du Conseil National de 2011")
plot(y~x, fr, xlab="Part des exploitations biologiques en 2013", ylab="Part des voix pour les Verts aux élections du Conseil National de 2011", pch=4)
abline(lin)
partagrihab <- read.delim("~/Desktop/partagrihab", dec=",")
View(partagrihab)
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
barplot(partagrihab$Part.agri.hab, names.arg=partagrihab$Commune, horiz=FALSE, cex.names=0.7, ylim=c(0,0.2), main="Part surface agricole par rapport à la surface habitat")
abline(h=mean(partagrihab$Part.agri.hab))
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
barplot(partagrihab$Part.agri.hab, names.arg=partagrihab$Commune, horiz=FALSE, cex.names=0.7, ylim=c(0,max(partagrihab$Part.agri.hab)), main="Part surface agricole par rapport à la surface habitat")
abline(h=mean(partagrihab$Part.agri.hab))
attach(partagrihab)
sorted <- partagrihab[order(Part.agri.hab, decreasing=TRUE),]
detach(partagrihab)
sorted
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
barplot(sorted$Part.agri.hab, names.arg=sorted$Commune, horiz=FALSE, cex.names=0.7, ylim=c(0,max(sorted$Part.agri.hab)), main="Part surface agricole par rapport à la surface habitat")
abline(h=mean(sorted$Part.agri.hab))
cl <- kmeans(sorted$Part.agri.hab,5)
pdf("Agrihabinfra_jenks.pdf",paper = "a4r")
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
fix5 <- classIntervals(sorted$Part.agri.hab, n=5, style="jenks")
barplot(sorted$Part.agri.hab, names.arg=sorted$Commune, horiz=FALSE, cex.names=0.7, main="Mise en classe par Jenks pour la variable qualitative", col=findCols(fix5), ylim=c(0,0.2), border=NA)
dev.off()
pdf("Agrihabinfra_kmeans.pdf",paper = "a4r")
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
kel <-kmeans(sorted$Part.agri.hab,5)
barplot(sorted$Part.agri.hab, names.arg=elec$Commune, horiz=FALSE, cex.names=0.7, main="Classes pour la variable qualitative", col=kel$cluster, ylim=c(0,0.2), border=NA)
abline(h=kel$centers)
dev.off()
pdf("Agrihabinfra_barplot.pdf",paper = "a4r")
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
barplot(sorted$Part.agri.hab, names.arg=sorted$Commune, horiz=FALSE, cex.names=0.7, ylim=c(0,max(sorted$Part.agri.hab)), main="Histogramme pour la variable qualitative")
abline(h=mean(sorted$Part.agri.hab))
dev.off()
pdf("Agrihabinfra_jenks.pdf",paper = "a4r")
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
fix5 <- classIntervals(sorted$Part.agri.hab, n=5, style="jenks")
barplot(sorted$Part.agri.hab, names.arg=sorted$Commune, horiz=FALSE, cex.names=0.7, main="Mise en classe par Jenks pour la variable qualitative", col=findCols(fix5), ylim=c(0,0.2), border=NA)
dev.off()
pdf("Agrihabinfra_kmeans.pdf",paper = "a4r")
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
kel <-kmeans(sorted$Part.agri.hab,5)
barplot(sorted$Part.agri.hab, names.arg=sorted$Commune, horiz=FALSE, cex.names=0.7, main="Classes pour la variable qualitative", col=kel$cluster, ylim=c(0,0.2), border=NA)
abline(h=kel$centers)
dev.off()
pdf("Agrihabinfra_barplot.pdf",paper = "a4r")
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
barplot(sorted$Part.agri.hab, names.arg=sorted$Commune, horiz=FALSE, cex.names=0.7, ylim=c(0,max(sorted$Part.agri.hab)), main="Histogramme pour la variable qualitative")
abline(h=mean(sorted$Part.agri.hab))
dev.off()
tlibrary(classInt)
library(classInt)
pdf("Agrihabinfra_jenks.pdf",paper = "a4r")
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
fix5 <- classIntervals(sorted$Part.agri.hab, n=5, style="jenks")
barplot(sorted$Part.agri.hab, names.arg=sorted$Commune, horiz=FALSE, cex.names=0.7, main="Mise en classe par Jenks pour la variable qualitative", col=findCols(fix5), ylim=c(0,0.2), border=NA)
dev.off()
pdf("Agrihabinfra_kmeans.pdf",paper = "a4r")
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
kel <-kmeans(sorted$Part.agri.hab,5)
barplot(sorted$Part.agri.hab, names.arg=sorted$Commune, horiz=FALSE, cex.names=0.7, main="Classes pour la variable qualitative", col=kel$cluster, ylim=c(0,0.2), border=NA)
abline(h=kel$centers)
dev.off()
pdf("Agrihabinfra_barplot.pdf",paper = "a4r")
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
barplot(sorted$Part.agri.hab, names.arg=sorted$Commune, horiz=FALSE, cex.names=0.7, ylim=c(0,max(sorted$Part.agri.hab)), main="Histogramme pour la variable qualitative")
abline(h=mean(sorted$Part.agri.hab))
dev.off()
pdf("Agrihabinfra_jenks.pdf",paper = "a4r")
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
fix5 <- classIntervals(sorted$Part.agri.hab, n=5, style="jenks")
barplot(sorted$Part.agri.hab, names.arg=sorted$Commune, horiz=FALSE, cex.names=0.7, main="Mise en classe par Jenks pour la variable qualitative", col=findCols(fix5), ylim=c(0,max(sorted$Part.agri.hab)), border=NA)
dev.off()
pdf("Agrihabinfra_kmeans.pdf",paper = "a4r")
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
kel <-kmeans(sorted$Part.agri.hab,5)
barplot(sorted$Part.agri.hab, names.arg=sorted$Commune, horiz=FALSE, cex.names=0.7, main="Classes pour la variable qualitative", col=kel$cluster, ylim=c(0,max(sorted$Part.agri.hab)), border=NA)
abline(h=kel$centers)
dev.off()
pdf("Agrihabinfra_barplot.pdf",paper = "a4r")
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
barplot(sorted$Part.agri.hab, names.arg=sorted$Commune, horiz=FALSE, cex.names=0.7, ylim=c(0,max(sorted$Part.agri.hab)), main="Histogramme pour la variable qualitative")
abline(h=mean(sorted$Part.agri.hab))
dev.off()
pdf("Agrihabinfra_jenks.pdf",paper = "a4r")
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
fix5 <- classIntervals(sorted$Part.agri.hab, n=6, style="jenks")
barplot(sorted$Part.agri.hab, names.arg=sorted$Commune, horiz=FALSE, cex.names=0.7, main="Mise en classe par Jenks pour la variable qualitative", col=findCols(fix5), ylim=c(0,max(sorted$Part.agri.hab)), border=NA)
dev.off()
pdf("Agrihabinfra_kmeans.pdf",paper = "a4r")
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
kel <-kmeans(sorted$Part.agri.hab,6)
barplot(sorted$Part.agri.hab, names.arg=sorted$Commune, horiz=FALSE, cex.names=0.7, main="Classes pour la variable qualitative", col=kel$cluster, ylim=c(0,max(sorted$Part.agri.hab)), border=NA)
abline(h=kel$centers)
dev.off()
pdf("Agrihabinfra_jenks.pdf",paper = "a4r")
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
fix5 <- classIntervals(sorted$Part.agri.hab, n=5, style="jenks")
barplot(sorted$Part.agri.hab, names.arg=sorted$Commune, horiz=FALSE, cex.names=0.7, main="Mise en classe par Jenks pour la variable qualitative", col=findCols(fix5), ylim=c(0,max(sorted$Part.agri.hab)), border=NA)
dev.off()
pdf("Agrihabinfra_kmeans.pdf",paper = "a4r")
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
kel <-kmeans(sorted$Part.agri.hab,5)
barplot(sorted$Part.agri.hab, names.arg=sorted$Commune, horiz=FALSE, cex.names=0.7, main="Classes pour la variable qualitative", col=kel$cluster, ylim=c(0,max(sorted$Part.agri.hab)), border=NA)
abline(h=kel$centers)
dev.off()
help(barplot)
pdf("Agrihabinfra_kmeans.pdf",paper = "a4r")
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
kel <-kmeans(sorted$Part.agri.hab,5)
barplot(sorted$Part.agri.hab, names.arg=sorted$Commune, horiz=FALSE, cex.names=0.7, main="Classes pour la variable qualitative", col=kel$cluster, ylim=c(0,max(sorted$Part.agri.hab)), border=NA, cex.axix=1)
abline(h=kel$centers)
dev.off()
pdf("Agrihabinfra_kmeans.pdf",paper = "a4r")
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
kel <-kmeans(sorted$Part.agri.hab,5)
barplot(sorted$Part.agri.hab, names.arg=sorted$Commune, horiz=FALSE, cex.names=0.7, main="Classes pour la variable qualitative", col=kel$cluster, ylim=c(0,max(sorted$Part.agri.hab)), border=NA, cex.axis=1)
abline(h=kel$centers)
dev.off()
pdf("Agrihabinfra_kmeans.pdf",paper = "a4r")
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
kel <-kmeans(sorted$Part.agri.hab,5)
barplot(sorted$Part.agri.hab, names.arg=sorted$Commune, horiz=FALSE, cex.names=0.7, main="Classes pour la variable qualitative", col=kel$cluster, ylim=c(0,max(sorted$Part.agri.hab)), border=NA, cex.axis=0.2)
abline(h=kel$centers)
dev.off()
pdf("Agrihabinfra_kmeans.pdf",paper = "a4r")
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
kel <-kmeans(sorted$Part.agri.hab,5)
barplot(sorted$Part.agri.hab, names.arg=sorted$Commune, horiz=FALSE, cex.names=0.7, main="Classes pour la variable qualitative", col=kel$cluster, ylim=c(0,max(sorted$Part.agri.hab)), border=NA, cex.axis=2)
abline(h=kel$centers)
dev.off()
cticks <- c(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18.19.20.21,22,23,24,25)
cticks <- c(0, 1, 2, 3, 4, 5 , 6 , 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ,22 ,23 ,24 ,25)
pdf("Agrihabinfra_kmeans.pdf",paper = "a4r")
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
kel <-kmeans(sorted$Part.agri.hab,5)
barplot(sorted$Part.agri.hab, names.arg=sorted$Commune, horiz=FALSE, cex.names=0.7, main="Classes pour la variable qualitative", col=kel$cluster, ylim=c(0,max(sorted$Part.agri.hab)), border=NA, at=cticks)
abline(h=kel$centers)
dev.off()
pdf("Agrihabinfra_kmeans.pdf",paper = "a4r")
par(cex=0.6,font.lab=2, las=2, mar=c(6,2,1,0.5))
kel <-kmeans(sorted$Part.agri.hab,5)
barplot(sorted$Part.agri.hab, names.arg=sorted$Commune, horiz=FALSE, cex.names=0.7, main="Classes pour la variable qualitative", col=kel$cluster, ylim=c(0,max(sorted$Part.agri.hab)), border=NA)
abline(h=kel$centers)
dev.off()
source('~/Google Drive/Luc/Cours/Cartographie/Carto_cartes/Travail/scriptcartoplotjenkskmeansbar.R')
anovacartoavril <- read.csv("~/Desktop/anovacartoavril")
View(anovacartoavril)
fit <- aov(anovacartoavril$zone.urbain ~ anovacartoavril$pexplbio)
fit <- aov(anovacartoavril$pexplbio ~ anovacartoavril$zone.urbain)
fit
anovaaggloavril <- read.csv("~/Desktop/anovaaggloavril")
View(anovaaggloavril)
fit2 <- aov(anovaaggloavril$pexplbio ~ anovaaggloavril$agglomération)
fit2
fit
fit.summary()
plot(fit)
summary(fit)
summary(fit2)
`18decimaloutput` <- read.table("~/Google Drive/Projet3/csv/18decimaloutput.csv", quote="\"")
View(`18decimaloutput`)
histogram(18decimaloutput,10)
decimaloutput <- read.table("~/Google Drive/Projet3/csv/decimaloutput.csv", quote="\"")
View(decimaloutput)
View(`18decimaloutput`)
decimaloutput <- read.table("~/Google Drive/Projet3/csv/decimaloutput.csv", quote="\"")
View(decimaloutput)
help(histogram)
??histogram
decimaloutput <- read.table("~/Google Drive/Projet3/csv/decimaloutput.csv", quote="\"")
View(decimaloutput)
qplot(Nombre, data=decimaloutput, geom="histogram", binwidth=0.1)
hist(decimaloutput, breaks=10, density=10 )
hist(decimaloutput, breaks=10, density=10)
decimaloutput(1)
hist(decimaloutput)
mean(decimaloutput)
View(`18decimaloutput`)
hist(decimaloutput!V1)
hist(decimaloutput.V1)
hist(decimaloutput!V1)
plot(decimaloutput)
plot(decimaloutput, freq=equidist)
library('lattice')
plot.histogram(decimaloutput)
hist(decimaloutput)
cls
cls()
clear()
clean()
decimaloutput <- read.table("~/Google Drive/Projet3/csv/decimaloutput.csv", quote="")
View(decimaloutput)
hist(decimaloutput)
plot(decimaloutput)
mean(decimaloutput)
data <- read.table("~/Google Drive/Luc/Cours/2014-2015 automne/Cartographie/Dossier/parties/data/data.csv", sep=";", quote="\"")
View(data)
data <- read.csv("~/Google Drive/Luc/Cours/2014-2015 automne/Cartographie/Dossier/parties/data/data.csv", sep=";")
View(data)
decimaloutput <- read.table("~/Google Drive/Projet3/csv/decimaloutput.csv", quote="")
View(decimaloutput)
hist(data!nbvotevert)
data!votevert
view(data!nbvotevert)
view(data!$nbvotevert)
hist(data$nbvotevert)
hist(decimaloutput$V1)
decimaloutput <- read.table("~/Google Drive/Projet3/csv/decimaloutput.csv", quote="\"")
View(decimaloutput)
hist(decimaloutput$V1,breaks=10,xlab="")
hist(decimaloutput$V1,breaks=10,xlab="",ylim=1000)
hist(decimaloutput$V1,breaks=10,xlab="", ylim=1000)
hist(decimaloutput$V1,breaks=10,xlab="", ylim=0:1000)
hist(decimaloutput$V1,breaks=10,xlab="", ylim=c(0,1000))
hist(decimaloutput$V1,breaks=10,xlab="", ylim=c(0,1000), title="18. Histogramme", ylab="Fréquence")
hist(decimaloutput$V1,breaks=10,xlab="", ylim=c(0,1000), main="18. Histogramme", ylab="Fréquence")
hist(decimaloutput$V1,breaks=10,xlab="", ylim=c(0,1000), main="18. Histogramme", ylab="Fréquence")
hist(decimaloutput$V1,breaks=10,xlab="", ylim=c(0,1000), main="18. Histogramme", ylab="Fréquences")
hist(decimaloutput$V1,breaks=10,xlab="", ylim=c(0,1000), main="18. Histogramme", ylab="Fréquences")
hist(decimaloutput$V1,breaks=10,xlab="", ylim=c(0,1000), main="18. Histogramme", ylab="Fréquences")
mean(decimaloutput$V1)
ls(decimaloutput$V1)
ls(decimaloutput$V1)
??least
??ls
help(least squares)
??least
??var
??variance
var.linear(decimaloutput$V1)
library(boot)
var.linear(decimaloutput$V1)
var(decimaloutput$V1)
sqrt(var(decimaloutput$V1))
d <- rbinom(8191,0,0.5)
d
d <- rbinom(8191,10,0.5)
d
d <- rbinom(8191,2,0.5)
d
d <- rbinom(8191,1,0.5)
d
d <- rbinom(8191,mean=0.5,sd=0.5)
d <- rbinom(8191,0.5,0.5)
d <- rbinom(8191,0,1)
d
set.seed(8191)
??punif
p <- runif(8191,0,1)
p
p <- runif(8191,0,1)
??KS
ks.test(decimaloutput$V1, p)
ks.test(p, p)
q <- runif(8191,0,1)
ks.test(p, q)
p <- runif(8191,0,1)
ks.test(decimaloutput$V1, p)
p <- runif(8191,0,1)
ks.test(decimaloutput$V1, p)
p <- runif(8191,0,1)
ks.test(decimaloutput$V1, p)
p <- runif(8191,0,1)
ks.test(decimaloutput$V1, p)
p <- runif(8191,0,1)
ks.test(decimaloutput$V1, p)
p <- runif(8191,0,1)
ks.test(decimaloutput$V1, p)
p <- runif(8191,0,1)
q <- runif(8191,0,1)
ks.test(decimaloutput$V1, p)
??unif
??xhi
??xi
chisq.test(decimaloutput$V1)
p <- pnorm(8191,0,1)
chisq.test(p)
chisq.test(p)
p
p <- rnorm(8191,0,1)
chisq.test(p)
p
p <- rnorm(8191,1,1)
p
p <- rnorm(8191,3,1)
p
chisq.test(p)
p<- abs(p)
p
p <- rnorm(8191,0,1)
p<-abs(p)
chisq.test(p)
chisq.test(decimaloutput$V1)
decimaloutput1 <- read.table("~/Google Drive/Projet3/csv/decimaloutput1.csv", quote="")
View(decimaloutput1)
decimaloutput <- read.table("~/Google Drive/Projet3/csv/decimaloutput.csv", quote="")
View(decimaloutput)
hist(decimaloutput$V1, breaks=10,xlab="",ylim=c(0,1000),main="18. Histogramme", ylab="Fréquences")
help(hist)
decimaloutput <- read.table("~/Google Drive/Projet3/csv/decimaloutput.csv", quote="")
hist(decimaloutput$V1, breaks=10,xlab="",ylim=c(0,1000),main="18. Histogramme", ylab="Fréquences")
abline(v=mean(decimaloutput$V1))
abline(h=mean(decimaloutput$V1))
mean(decimaloutput$V1)
decimaloutput1 <- read.table("~/Google Drive/Projet3/csv/decimaloutput1.csv", quote="")
View(decimaloutput1)
hist(decimaloutput1$V1, breaks=10,xlab="",ylim=c(0,2000),main="18.2 Histogramme", ylab="Fréquences")
hist(decimaloutput1$V1, breaks=10,xlab="",ylim=c(0,1800),main="18.2 Histogramme", ylab="Fréquences")
hist(decimaloutput1$V1, breaks=10,xlab="",ylim=c(0,1700),main="18.2 Histogramme", ylab="Fréquences")
hist(decimaloutput1$V1, breaks=10,xlab="",ylim=c(0,2000),main="18.2 Histogramme", ylab="Fréquences")
help(hist)
lines(density(decimaloutput1$V1))
hist(decimaloutput1$V1, breaks=10,xlab="",ylim=c(0,2000),main="18.2 Histogramme", ylab="Fréquences", prob=TRUE)
lines(density(decimaloutput1$V1))
hist(decimaloutput1$V1, breaks=10,xlab="",ylim=c(0,2000),main="18.2 Histogramme", ylab="Fréquences")
hist(decimaloutput1$V1, breaks=10,xlab="",ylim=c(0,2000),main="18.2 Histogramme", ylab="Fréquences", prob=TRUE, las=1)
hist(decimaloutput1$V1, breaks=10,xlab="",main="18.2 Histogramme", ylab="Fréquences", prob=TRUE, las=1)
lines(density(decimaloutput1$V1))
hist(decimaloutput1$V1, breaks=10,xlab="",main="18.2 Histogramme", ylab="Fréquences",ylim=c(1000,2000))
hist(decimaloutput1$V1, breaks=10,xlab="",main="18.2 Histogramme", ylab="Fréquences",ylim=c(1400,1800))
hist(decimaloutput1$V1, breaks=10,xlab="",main="18.2 Histogramme", ylab="Fréquences",ylim=c(000,2000))
hist(decimaloutput$V1, breaks=10,xlab="",main="18.2 Histogramme", ylab="Fréquences", prob=TRUE, las=1)
lines(density(decimaloutput$V1))
decimaloutput <- read.table("~/Google Drive/Projet3/csv/decimaloutput.csv", quote="")
View(decimaloutput)
hist(decimaloutput$V1,breaks=10)
runif(10)
a<-runif(1000)
hist(a,breaks=10)
csv??
l
??csv
write.table(a,file="unif.csv")
a
write.csv(a,file="unif.csv")
write.table(a,file="unif.csv")
write.table(a,file="unif.csv", row.names=FALSE,col.names=FALSE)
write.table(a,file="'Google Drive'/Projet3/csv/unif.csv", row.names=FALSE,col.names=FALSE)
a<-runif(10)
write.table(a,file="unif.csv", row.names=FALSE,col.names=FALSE)
hist(a,breaks=10)
tausendg <- read.csv("~/Documents/TRAVAIL/Python/tausendg.csv", header=FALSE)
View(tausendg)
tausendg <- read.csv("~/Documents/TRAVAIL/Python/tausendg.csv", header=FALSE)
View(tausendg)
barplot(tausendg)
barplot(tausendg)
barplot??
d
??barplot
datal<-tausendg$V1/(tausendg$V1+tausendg$V2)
datal
barplot(datal)
barplot(datal,0.1)
??barplot
barplot(datal,width=0.1)
barplot(datal,width=0.01)
plot(datal)
??count
datal.count()
count(datal, 0.5)
histogram(datal)
??histogram
library(ggplot2)
histogram(datal)
ggplot2.histogram(datal)
geom_histogram(datal)
install.packages('dplyr')
install.packages('tidyr')
setwd("C:/lucmiaz/algorithms-analysis-report")
setwd("~/Documents/TRAVAIL/SBB_KG/Algorithms-analysis-report")
library(jsonlite)
library(ggplot2)
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(extrafont)
require(tikzDevice)
loadfonts()
json_file="Datamaous.json"
csv_file="Datamaous.csv"
tf<-read.csv(csv_file)
remove(json_file)
source('R/find_best.R')
theme_bw<-theme_update(text=element_text(size=14, family="Helvetica Neue"), axis.text=element_text(family="Helvetica Neue"),legend.background=element_rect(fill="#f5f5f5"))
theme_set(theme_bw())
#clusters<-kmeans(tf$spec,1000)
#tf[,'cluster']<-clusters$cluster
#to do add clusters$cluster column to tf and then merge by groups...
#tf<-cbind()
install.packages('extrafont')
library("extrafont", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages(ggplot2)
install.packages('ggplot2')
install.packages('RColorBrewer')
setwd("C:/lucmiaz/algorithms-analysis-report")
setwd("~/Documents/TRAVAIL/SBB_KG/Algorithms-analysis-report")
library(jsonlite)
library(ggplot2)
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(extrafont)
require(tikzDevice)
loadfonts()
json_file="Datamaous.json"
csv_file="Datamaous.csv"
tf<-read.csv(csv_file)
remove(json_file)
source('R/find_best.R')
theme_bw<-theme_update(text=element_text(size=14, family="Helvetica Neue"), axis.text=element_text(family="Helvetica Neue"),legend.background=element_rect(fill="#f5f5f5"))
theme_set(theme_bw())
#clusters<-kmeans(tf$spec,1000)
#tf[,'cluster']<-clusters$cluster
#to do add clusters$cluster column to tf and then merge by groups...
#tf<-cbind()
install.packages('jsonlite')
setwd("C:/lucmiaz/algorithms-analysis-report")
setwd("~/Documents/TRAVAIL/SBB_KG/Algorithms-analysis-report")
library(jsonlite)
library(ggplot2)
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(extrafont)
require(tikzDevice)
loadfonts()
json_file="Datamaous.json"
csv_file="Datamaous.csv"
tf<-read.csv(csv_file)
remove(json_file)
source('R/find_best.R')
theme_bw<-theme_update(text=element_text(size=14, family="Helvetica Neue"), axis.text=element_text(family="Helvetica Neue"),legend.background=element_rect(fill="#f5f5f5"))
theme_set(theme_bw())
#clusters<-kmeans(tf$spec,1000)
#tf[,'cluster']<-clusters$cluster
#to do add clusters$cluster column to tf and then merge by groups...
#tf<-cbind()
install.packages('tikzDevice')
Datamaous2<-read.csv('WallofFame/Datamaous_2.csv')
rocplotdatamaous <- ggplot(Datamaous2, aes(Datamaous2$FPR,Datamaous2$TPR,color=Datamaous2$algprop, title="Algorithms - datamaous"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=rep(brewer.pal(12,"Paired"),times=2),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,3,17,18,19),each=3),name="Algorithms")+
geom_point(aes(shape=Datamaous2$algprop,label=Datamaous2$algprop),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
ggsave('figures/datamaous.pdf', plot=rocplotdatamaous, width=8, height=6)
submaous<-select(Datamaous2, dist_ax, esr_dist_ax, luc_dist_ax, PHF_dist_ax, PhC_dist_ax, X, X.1)
submaous<-mutate(submaous, tot_dist=(dist_ax+esr_dist_ax+luc_dist_ax+PHF_dist_ax+PhC_dist_ax)/5)
write.csv(submaous, 'WallofFame/datamaous_dist.csv')
View(submaous)
submaous %>% arrange(tot_dist)
best<-find_best(tf, qualities=c(3,2))
rocplot <- ggplot(best, aes(best$FPR,best$TPR,color=best$algprop, title="Algorithms - all authors"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=rep(brewer.pal(12,"Paired"),times=2),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,3,17,18,19),each=5),name="Algorithms")+
geom_point(aes(shape=best$algprop,label=best$algprop),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
ggsave('figures/ROC.pdf', plot=rocplot, width=8, height=6)
bestesr <-find_best(tf, authors=c('esr'),qualities=c(2,3))
rocplotesr <- ggplot(bestesr, aes(bestesr$FPR,bestesr$TPR,color=bestesr$algprop, title="Algorithms - esr"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=rep(brewer.pal(12,"Paired"),times=2),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,3,17,18,19),each=3),name="Algorithms")+
geom_point(aes(shape=bestesr$algprop,label=bestesr$algprop),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
ggsave('figures/esr.pdf', plot=rocplotesr, width=8, height=6)
bestPHF <-find_best(tf, authors=c('PHF'),qualities=c(2,3))
rocplotPHF <- ggplot(bestPHF, aes(bestPHF$FPR,bestPHF$TPR,color=bestPHF$algprop, title="Algorithms - PHF"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=rep(brewer.pal(12,"Paired"),times=2),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,3,17,18,19),each=3),name="Algorithms")+
geom_point(aes(shape=bestPHF$algprop,label=bestPHF$algprop),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
ggsave('figures/PHF.pdf', plot=rocplotPHF, width=8, height=6)
best<-find_best(tf, qualities=c(3,2))
rocplot <- ggplot(best, aes(best$FPR,best$TPR,color=best$algprop, title="Algorithms - all authors"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=rep(brewer.pal(12,"Paired"),times=2),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,3,17,18,19),each=5),name="Algorithms")+
geom_point(aes(shape=best$algprop,label=best$algprop),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
ggsave('figures/ROC.pdf', plot=rocplot, width=8, height=6)
tf<-read.csv(csv_file)
best<-find_best(tf, qualities=c(3,2))
source('R/find_best.R')
bestPhC <- find_best(tf,authors=c('PhC'), qualities=c(2,3))
source('R/find_best.R')
bestPhC <- find_best(tf,authors=c('PhC'), qualities=c(2,3))
source('R/find_best.R')
bestPhC <- find_best(tf,authors=c('PhC'), qualities=c(2,3))
source('R/find_best.R')
bestPhC <- find_best(tf,authors=c('PhC'), qualities=c(2,3))
source('R/find_best.R')
bestPhC <- find_best(tf,authors=c('PhC'), qualities=c(2,3))
warnings()
View(bestPhC)
source('R/find_best.R')
bestPhC <- find_best(tf,authors=c('PhC'), qualities=c(2,3))
submaous %>% arrange(tot_dist)
submaous %>% arrange(tot_dist)
