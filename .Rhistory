library(jsonlite)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
json_file='C:/lucmiaz/Algorithm_Report/Datamaous.json'
tf<-fromJSON(json_file)
library(jsonlite)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
json_file='C:/lucmiaz/Algorithm_Report/Datamaous.json'
tf<-fromJSON(json_file)
library(jsonlite)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
json_file='C:/lucmiaz/Algorithm_Report/Datamaous.json'
tf<-fromJSON(json_file)
tf
View(tf)
json_file='C:/lucmiaz/Algorithm_Report/Datamaous.json'
tf<-fromJSON(json_file)
json_file='C:/lucmiaz/Algorithm_Report/Datamaousdict.json'
tfd<-fromJSON(json_file)
View(tfd)
remove(tfd)
remove(json_file)
max(tf$spec)
min(tf$spec)
mean(tf$spec)
??kmeans
library(stats)
kmeans(tf$spec)
kmeans(tf$spec, 10)
clusters<-kmeans(tf$spec, 10)
clusters$cluster
install.packages('knitr')
install.packages('qtl')
theme_set(theme_bw())
barplot<-ggplot(data=tf, aes(BPR, fill=as.factor(disc)))+
geom_histogram(binwidth=0.2,alpha = 0.5, aes(y = ..density..), position = 'identity')
barplot
library(ggplot2)
library(dplyr)
library(RColorBrewer)
theme_set(theme_bw())
barplot<-ggplot(data=tf, aes(BPR, fill=as.factor(disc)))+
geom_histogram(binwidth=0.2,alpha = 0.5, aes(y = ..density..), position = 'identity')
barplot
barplot<-ggplot(data=tf, aes(spec, fill=as.factor(disc)))+
geom_histogram(binwidth=0.2,alpha = 0.5, aes(y = ..density..), position = 'identity')
barplot
barplot<-ggplot(data=tf, aes(spec, fill=as.factor(clusters)))+
geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')
barplot
barplot<-ggplot(data=tf, aes(spec, fill=as.factor(disc)&cluster))+
geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')
barplot
barplot<-ggplot(data=tf, aes(spec, fill=as.factor(disc)&clusters))+
geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')
barplot
barplot<-ggplot(data=tf, aes(spec, fill=as.factor(disc&clusters)))+
geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')
barplot
barplot<-ggplot(data=tf, aes(spec, fill=as.factor(disc,clusters)))+
geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')
barplot
barplot<-ggplot(data=tf, aes(spec, fill=as.factor(clusters)))+
geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')
barplot
barplot<-ggplot(data=tf, aes(spec, fill=clusters))+
geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')
barplot
tf[,'cluster']<-clusters$cluster
barplot<-ggplot(data=tf, aes(spec, fill=cluster))+
geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')
barplot
summary(tf, clusters)
View(tf)
barplot<-ggplot(data=tf, aes(spec, fill=as.factor(disc)))+
geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')
barplot
barplot<-ggplot(data=tf, aes(spec, fill=as.factor(cluster)))+
geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')
barplot
barplot<-ggplot(data=subset(tf, cluster %in% [1:4]), aes(spec, fill=as.factor(cluster)))+
geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')
barplot<-ggplot(data=subset(tf, cluster %in% arrange(cluster)[1:4,]), aes(spec, fill=as.factor(cluster)))+
geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')
install.packages('extrafont')
library(extrafont)
font_import()
theme_set(theme_bw())
#barplot<-ggplot(data=subset(tf, cluster %in% arrange(cluster, desc(cluster))[1:4,]), aes(spec, fill=as.factor(cluster)))+
barplot<-ggplot(data=tf, aes(spec, disc, fill=as.factor(cluster)))+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
geom_violin()
theme(text=element_text(size=16, family="Helvetica Neue"))
barplot
barplot<-ggplot(data=tf, aes(spec, disc))+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
geom_violin()
theme(text=element_text(size=16, family="Helvetica Neue"))
barplot
barplot<-ggplot(data=tf, aes(disc, spec))+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
geom_violin()
theme(text=element_text(size=16, family="Helvetica Neue"))
barplot
loadfonts()
json_file='Datamaous.json'
tf<-fromJSON(json_file)
library(jsonlite)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(extrafont)
loadfonts()
json_file='Datamaous.json'
tf<-fromJSON(json_file)
json_file='C:/lucmiaz/Algorithm-analysis-report/Datamaous.json'
tf<-fromJSON(json_file)
json_file<-'C:/LucMiaz/KG_dev_branch/KG/Measurements_example/MBBMZugExample/results/test_ZischenDetetkt2_2.0s_3000Hz_0dB_20-10-2015_14-59-39.json'
dataraw<-fromJSON(json_file)
library('jsonlite')
json_file<-'C:/LucMiaz/KG_dev_branch/KG/Measurements_example/MBBMZugExample/results/test_ZischenDetetkt2_2.0s_3000Hz_0dB_20-10-2015_14-59-39.json'
dataraw<-fromJSON(json_file)
json_file="Datamaous.json"
tf<-fromJSON(json_file)
summary(tf)
barplot<-ggplot(data=tf, aes(disc, spec))+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
geom_violin()
theme(text=element_text(size=16, family="Impact"))
barplot
barplot<-ggplot(data=tf, aes(disc, spec))+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
geom_violin()
theme(text=element_text(size=16, family="Arial"))
barplot
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
setwd(C:/lucmiaz/Algorithms_analysis_report/figure)
setwd("C:/lucmiaz/Algorithms_analysis_report/figure")
setwd("C:/lucmiaz/Algorithms_analysis_report/figures")
setwd("C:/lucmiaz/Algorithms_analysis_report")
setwd("C:/lucmiaz/")
getwd()
show(getwd())
View(getwd())
setwd("~/")
setwd("C:/lucmiaz/")
setwd("C:/LucMiaz/Algorithms-analysis-report/figures")
barplot<-ggplot(data=tf, aes(disc, spec))+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
geom_violin()
theme(text=element_text(size=16, family="Helvetica Neue"))
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
barplot<-ggplot(data=tf, aes(disc, spec))+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
geom_violin()+
xlab("Element was selected as flanging") + ylab("BPR")+
theme(text=element_text(size=16, family="Helvetica Neue"))
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
theme(text=element_text(size=16, family="Helvetica_Neue"))
barplot<-ggplot(data=tf, aes(disc, spec))+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
geom_violin()+
xlab("Element was selected as flanging") + ylab("BPR")+
theme(text=element_text(size=16, family="Helvetica_Neue"))
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
a<-fonts()
a['Helvetica Neue']
a
barplot<-ggplot(data=tf, aes(disc, spec))+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
geom_violin()+
xlab("Element was selected as flanging") + ylab("BPR")+
theme(text=element_text(size=16, family="Helvetica Neue"))
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
barplot<-ggplot(data=tf, aes(disc, spec))+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
geom_violin()+
xlab("Element was selected as flanging") + ylab("BPR")+
theme(text=element_text(size=14, family="Georgia"))
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
library(jsonlite)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(extrafont)
loadfonts()
json_file="Datamaous.json"
tf<-fromJSON(json_file)
remove(json_file)
clusters<-kmeans(tf$spec,100)
tf[,'cluster']<-clusters$cluster
#to do add clusters$cluster column to tf and then merge by groups...
#tf<-cbind()
theme_set(theme_bw())
#barplot<-ggplot(data=subset(tf, cluster %in% arrange(cluster, desc(cluster))[1:4,]), aes(spec, fill=as.factor(cluster)))+
barplot<-ggplot(data=tf, aes(disct, spec))+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
geom_violin()+
xlab("Element was selected as flanging") + ylab("BPR")+
theme(text=element_text(size=14, family="Helvetica Neue"))
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
summary(tf)
tf<-fromJSON(json_file)
json_file="Datamaous.json"
tf<-fromJSON(json_file)
library(jsonlite)
tf<-fromJSON(json_file)
json_file="Datamaous.json"
tf<-fromJSON(json_file)
tf<-fromJSON(json_file)
loadfonts()
json_file="Datamaous.json"
tf<-fromJSON(json_file)
tf<-fromJSON(json_file)
csv_file="Datamaous.csv"
tf<-read.csv(csv_file)
library(jsonlite)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(extrafont)
loadfonts()
json_file="Datamaous.json"
csv_file="Datamaous.csv"
tf<-read.csv(csv_file)
remove(json_file)
clusters<-kmeans(tf$spec,100)
tf[,'cluster']<-clusters$cluster
#to do add clusters$cluster column to tf and then merge by groups...
#tf<-cbind()
setwd("C:/LucMiaz/Algorithms-analysis-report")
tf<-read.csv(csv_file)
remove(json_file)
clusters<-kmeans(tf$spec,100)
View(tf)
tf<-read.csv(csv_file)
View(tf)
remove(json_file)
clusters<-kmeans(tf$spec,100)
theme_set(theme_bw())
#barplot<-ggplot(data=subset(tf, cluster %in% arrange(cluster, desc(cluster))[1:4,]), aes(spec, fill=as.factor(cluster)))+
barplot<-ggplot(data=tf, aes(disct, spec))+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
geom_violin()+
xlab("Element was selected as flanging") + ylab("BPR")+
theme(text=element_text(size=14, family="Helvetica Neue"))
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
algorithms<-unique(tf$algprop)
for (i in algorithms){
barplot<-ggplot(data=tf[tf$algprop==algorithms], aes(disct, spec))+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
geom_violin()+
xlab("Element was selected as flanging") + ylab("BPR")+
theme(text=element_text(size=14, family="Helvetica Neue"))
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
}
algorithms<-unique(tf$algprop)
for (i in algorithms){
barplot<-ggplot(data=tf[tf$algprop=algorithms], aes(disct, spec))+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
geom_violin()+
xlab("Element was selected as flanging") + ylab("BPR")+
theme(text=element_text(size=14, family="Helvetica Neue"))
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
}
library("ggplot2")
theme_set(theme_bw()) # use the black and white theme throughout
# fake data:
d <- data.frame(x = c(1:8, 1:8), y = runif(16),
group1 = rep(gl(2, 4, labels = c("a", "b")), 2),
group2 = gl(2, 8))
head(d)
ggplot(data = d) + geom_point(aes(x, y, colour = group1)) +
facet_grid(~group2)
barplot<-ggplot(data=tf[tf$algprop=algorithms], aes(disct, spec))+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
geom_violin()+
xlab("Element was selected as flanging") + ylab("BPR")+
theme(text=element_text(size=14, family="Helvetica Neue"))+
facet_grid(~algprop)
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
algorithms<-unique(tf$algprop)
barplot<-ggplot(data=tf[tf$algprop=algorithms], aes(disct, spec))+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
geom_violin()+
barplot<-ggplot(data=tf, aes(disct, spec))+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
geom_violin()+
xlab("Element was selected as flanging") + ylab("BPR")+
theme(text=element_text(size=14, family="Helvetica Neue"))+
coord_flip()+
facet_wrap(~algprop)
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
barplot<-ggplot(data=tf, aes(disct, spec))+geom_violin()+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
#xlab("Element was selected as flanging") + ylab("BPR")+
#theme(text=element_text(size=14, family="Helvetica Neue"))+
coord_flip()+
facet_wrap(~algprop)
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
View(tf)
algorithms<-unique(tf$algprop)
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
barplot<-ggplot(data=tf, aes(disct, spec))+geom_violin()+
xlab("Element was selected as flanging") + ylab("BPR")+
theme(text=element_text(size=14, family="Helvetica Neue"))+
coord_flip()+
facet_wrap(~author)
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
algorithms<-unique(tf$algprop)
barplot<-ggplot(data=tf, aes(disct, spec, fill="#d8b365"))+geom_violin()+
coord_flip()+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
theme(text=element_text(size=14, family="Helvetica Neue"))+
xlab("Element was selected as flanging") + ylab("BPR")+
facet_wrap(~author)
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
theme_set(theme_bw())
#barplot<-ggplot(data=subset(tf, cluster %in% arrange(cluster, desc(cluster))[1:4,]), aes(spec, fill=as.factor(cluster)))+
algorithms<-unique(tf$algprop)
barplot<-ggplot(data=tf, aes(disct, spec, fill="#d8b365"))+geom_violin(stat = "ydensity")+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
xlab("Element was selected as flanging") + ylab("BPR")+
theme(text=element_text(size=14, family="Helvetica Neue"))+
coord_flip()+
facet_wrap(~author)
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
theme_set(theme_bw())
#barplot<-ggplot(data=subset(tf, cluster %in% arrange(cluster, desc(cluster))[1:4,]), aes(spec, fill=as.factor(cluster)))+
algorithms<-unique(tf$algprop)
barplot<-ggplot(data=tf, aes(disct, spec, fill=as.factor(disct)))+geom_violin(stat = "ydensity")+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
xlab("Element was selected as flanging") + ylab("BPR")+
theme(text=element_text(size=14, family="Helvetica Neue"))+
coord_flip()+
facet_wrap(~author)
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
library(RColorBrewer)
??brewer
theme_get
theme_get()
theme_set(theme_bw())
theme_update(text=element_text(size=14, family="Helvetica Neue"), axis.text=element_text(family="Helvetica Neue"),legend.background=element_rect(fill="#f5f5f5"))
@
br
algorithms<-unique(tf$algprop)
barplot<-ggplot(data=tf, aes(disct, spec, fill=as.factor(disct)))+geom_violin(stat = "ydensity")+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
xlab("Element was selected as flanging") + ylab("BPR")+
coord_flip()+
facet_wrap(~author)
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
barplot<-ggplot(data=tf, aes(disct, spec, fill=as.factor(disct)))+geom_violin(stat = "ydensity")+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
xlab("Element was selected as flanging") + ylab("BPR")+
coord_flip()+
facet_wrap(~author)
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
theme_update(text=element_text(size=14, family="Helvetica Neue"))
barplot<-ggplot(data=tf, aes(disct, spec, fill=as.factor(disct)))+geom_violin(stat = "ydensity")+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
xlab("Element was selected as flanging") + ylab("BPR")+
coord_flip()+
facet_wrap(~author)
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
theme_bw<-theme_update(text=element_text(size=14, family="Helvetica Neue"), axis.text=element_text(family="Helvetica Neue"),legend.background=element_rect(fill="#f5f5f5"))
barplot<-ggplot(data=tf, aes(disct, spec, fill=as.factor(disct)))+geom_violin(stat = "ydensity")+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
xlab("Element was selected as flanging") + ylab("BPR")+
coord_flip()+
facet_wrap(~author)
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
theme_bw<-theme_update(text=element_text(size=14, family="Helvetica Neue"), axis.text=element_text(family="Helvetica Neue"),legend.background=element_rect(fill="#f5f5f5"))
theme_set(theme_bw())
barplot<-ggplot(data=tf, aes(disct, spec, fill=as.factor(disct)))+geom_violin(stat = "ydensity")+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
xlab("Element was selected as flanging") + ylab("BPR")+
coord_flip()+
facet_wrap(~author)
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
barplot<-ggplot(data=tf, aes(disct, spec, fill=as.factor(disct)))+geom_violin(stat = "ydensity", aes(fill=["#d8b365","#5ab4ac"]))+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
xlab("Element was selected as flanging") + ylab("BPR")+
coord_flip()+
facet_wrap(~author)
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
barplot<-ggplot(data=tf, aes(disct, spec, fill=as.factor(disct)))+geom_violin()+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
xlab("Element was selected as flanging") + ylab("BPR")+
coord_flip()+
facet_wrap(~author)
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
brewer.pal(2,'Blues')
brewer.pal(3,'Blues')
barplot<-ggplot(data=tf, aes(disct, spec, fill=as.factor(disct)))+geom_violin()+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
xlab("Element was selected as flanging") + ylab("BPR")+
coord_flip()+
facet_wrap(~author)
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
barplot<-ggplot(data=tf, aes(disct, spec, fill=as.factor(disct)))+geom_violin()+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
xlab("Element was selected as flanging") + ylab("BPR")+
coord_flip()+#rotates the graphic
facet_wrap(~author)+#plots by author
brewer.pal(3,'Blues')#colorscale
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
barplot<-ggplot(data=tf, aes(disct, spec, fill=as.factor(disct)))+geom_violin()+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
xlab("Element was selected as flanging") + ylab("BPR")+
coord_flip()+#rotates the graphic
facet_wrap(~author)+#plots by author
colScale#colorscale
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
myColors <- brewer.pal(5,"Blues")
names(myColors) <- levels(tf$disct)
colScale <- scale_colour_manual(name = "disct",values = myColors)
barplot<-ggplot(data=tf, aes(disct, spec, fill=as.factor(disct)))+geom_violin()+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
xlab("Element was selected as flanging") + ylab("BPR")+
coord_flip()+#rotates the graphic
facet_wrap(~author)+#plots by author
colScale#colorscale
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
colScale <- scale_colour_brewer(type = "seq", palette = 1)
barplot<-ggplot(data=tf, aes(disct, spec, fill=as.factor(disct)))+geom_violin()+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
xlab("Element was selected as flanging") + ylab("BPR")+
coord_flip()+#rotates the graphic
facet_wrap(~author)+#plots by author
colScale#colorscale
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
colScale <- scale_colour_brewer(type = "seq", palette = 2)
colScale
barplot<-ggplot(data=tf, aes(disct, spec, fill=as.factor(disct)))+geom_violin()+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
xlab("Element was selected as flanging") + ylab("BPR")+
coord_flip()+#rotates the graphic
facet_wrap(~author)+#plots by author
colScale#colorscale
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
barplot<-ggplot(data=tf, aes(disct, spec, fill=as.factor(disct)))+geom_violin()+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
xlab("Element was selected as flanging") + ylab("BPR")+
coord_flip()+#rotates the graphic
facet_wrap(~author)+#plots by author
scale_fill_brewer()#colorscale
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
barplot<-ggplot(data=tf, aes(disct, spec, fill=as.factor(disct)))+geom_violin()+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
xlab("Element was selected as flanging") + ylab("BPR")+
coord_flip()+#rotates the graphic
facet_wrap(~author)+#plots by author
scale_fill_brewer(type='div')#colorscale
ggsave("font_ggplot.pdf", plot=barplot,  width=4, height=4)
barplot
ggsave("font_ggplot.pdf", plot=barplot,  width=10, height=4)
View(tf)
barplot<-ggplot(data=tf, aes(disct~disc, spec, fill=as.factor(disct)))+geom_violin()+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
xlab("Element was selected as flanging") + ylab("BPR")+
coord_flip()+#rotates the graphic
facet_wrap(~author)+#plots by author
scale_fill_brewer(type='div')#colorscale
ggsave("font_ggplot.pdf", plot=barplot,  width=10, height=4)
barplot
clusters<-kmeans(tf$spec,100)
clusters<-kmeans(tf$spec,1000)
tf[,'cluster']<-clusters$cluster
barplot<-ggplot(data=tf, aes(disct, spec, fill=as.factor(disct)))+geom_violin()+
#geom_histogram(binwidth=0.2,alpha = 0.4, position = 'identity')+
xlab("Element was selected as flanging") + ylab("BPR")+
coord_flip()+#rotates the graphic
facet_wrap(cluster~author)+#plots by author
scale_fill_brewer(type='div')#colorscale
ggsave("font_ggplot.pdf", plot=barplot,  width=10, height=4)
barplot
View(tf)
