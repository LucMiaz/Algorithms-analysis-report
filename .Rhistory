best<-find_best(tf)
authors<-unique(tf$quality)
authors
authors<-list(unique(tf$quality))
authors
for (auth %in% authors){print(auth)}
for auth %in% authors{print(auth)}
for (auth in authors){print(auth)}
source('R/find_best.R')
best<-find_best(tf)
source('R/find_best.R')
best<-find_best(tf)
qualities<- list(unique(sort(tf$quality)))
qualities
source('R/find_best.R')
best<-find_best(tf)
source('R/find_best.R')
best<-find_best(tf)
source('R/find_best.R')
best<-find_best(tf)
authors=='PHF'
authors='PHF'
qualities=3
bestones<-data.frame('TPR'=double(),'FPR'=double(),'thd'=double(),'totP'=double(), 'totF'=double(),'alg'=character(),'algprop'=character(), 'delta'=double())
#iterate on algorithms
for (al in unique(tff$alg)){
#iterate on parameters
for (alp in unique(tf$algprop)){
sums<-data.frame('TPR'=double(),'FPR'=double(),'thd'=double(),'totP'=double(), 'totF'=double(), 'delta'=double())
algtf<-filter(tff, algprop==alp)
#iterate on thresholds
#thresholds<-seq(min(algtf$spec),max(algtf$spec),(max(algtf$spec)-min(algtf$spec))/200)
thresholds<-seq(-1,10,0.1)
delta<-thresholds[[2]]-thresholds[[1]]
for (i in thresholds){
TP<-tally(filter(algtf, spec>i & disc==1))
FP<-tally(filter(algtf, spec>i & disc==0))
totP<-tally(filter(algtf,disc==1))
totF<-tally(filter(algtf,disc==0))
if (totP>0 & totF>0){
sums[nrow(sums)+1,]<- data.frame('FPR'=FP/totF, 'TPR'=TP/totP, 'thd'=as.numeric(i), 'totP'=totP, 'totF'=totF)
}
}
thresmax<-which.max(abs(sums$TPR-sums$FPR))
bestones <-rbind(bestones,data.frame('TPR'=sums$TPR[thresmax],'FPR'=sums$FPR[thresmax],'thd'=sums$thd[thresmax],'totP'=sums$totP[thresmax],'totF'=sums$totF[thresmax], 'alg'=al[[1]],'algprop'=as.character(alp[1]),'delta'=delta))
remove(sums,thresmax)
}
}
tff<-tf
bestones<-data.frame('TPR'=double(),'FPR'=double(),'thd'=double(),'totP'=double(), 'totF'=double(),'alg'=character(),'algprop'=character(), 'delta'=double())
#iterate on algorithms
for (al in unique(tff$alg)){
#iterate on parameters
for (alp in unique(tf$algprop)){
sums<-data.frame('TPR'=double(),'FPR'=double(),'thd'=double(),'totP'=double(), 'totF'=double(), 'delta'=double())
algtf<-filter(tff, algprop==alp)
#iterate on thresholds
#thresholds<-seq(min(algtf$spec),max(algtf$spec),(max(algtf$spec)-min(algtf$spec))/200)
thresholds<-seq(-1,10,0.1)
delta<-thresholds[[2]]-thresholds[[1]]
for (i in thresholds){
TP<-tally(filter(algtf, spec>i & disc==1))
FP<-tally(filter(algtf, spec>i & disc==0))
totP<-tally(filter(algtf,disc==1))
totF<-tally(filter(algtf,disc==0))
if (totP>0 & totF>0){
sums[nrow(sums)+1,]<- data.frame('FPR'=FP/totF, 'TPR'=TP/totP, 'thd'=as.numeric(i), 'totP'=totP, 'totF'=totF)
}
}
thresmax<-which.max(abs(sums$TPR-sums$FPR))
bestones <-rbind(bestones,data.frame('TPR'=sums$TPR[thresmax],'FPR'=sums$FPR[thresmax],'thd'=sums$thd[thresmax],'totP'=sums$totP[thresmax],'totF'=sums$totF[thresmax], 'alg'=al[[1]],'algprop'=as.character(alp[1]),'delta'=delta))
remove(sums,thresmax)
}
}
bestones
remove(FP,TP,totP,totF,algtf,thresholds,al,alp)
bestones<-cbind(bestones, data.frame('col'=as.integer(bestones$algprop)))
bestones<-cbind(bestones, data.frame('dif'=bestones$TPR-bestones$FPR))
rocplot <- ggplot(bestones, aes(bestones$FPR,bestones$TPR,color=bestones$algprop, title='Algorithms'))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=rep(brewer.pal(12,"Paired"),times=2),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,3,17,18,19),each=3),name="Algorithms")+
geom_point(aes(shape=bestones$algprop,label=bestones$algprop),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
#geom_point(aes(sums$n[thd==thres],sums$n.1[thd==thres]), colour="#7b3294", size=3, label=thres)
#geom_text(data=filter(sums,thd==thres),aes(label=thd))
returnlist<- list('plot'=rocplot, 'bestframe'=bestones)
ggsave(plotName, plot=rocplot,  width=8, height=6)
source('R/find_best.R')
best<-find_best(tf)
best
best<-find_best(tf)
# setwd("C:/lucmiaz/algorithms-analysis-report")
setwd('/Users/lucmiaz/Documents/TRAVAIL/SBB_KG/algorithms-analysis-report')
library(jsonlite)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(extrafont)
require(tikzDevice)
loadfonts()
json_file="Datamaous.json"
csv_file="Datamaous.csv"
tf<-read.csv(csv_file)
remove(json_file)
source('R/find_best.R')
#clusters<-kmeans(tf$spec,1000)
#tf[,'cluster']<-clusters$cluster
#to do add clusters$cluster column to tf and then merge by groups...
#tf<-cbind()
best<-find_best(tf)
tff<- tf
bestones<-data.frame('TPR'=double(),'FPR'=double(),'thd'=double(),'totP'=double(), 'totF'=double(),'alg'=character(),'algprop'=character(), 'delta'=double())
#iterate on algorithms
for (al in unique(tff$alg)){
#iterate on parameters
for (alp in unique(tf$algprop)){
sums<-data.frame('TPR'=double(),'FPR'=double(),'thd'=double(),'totP'=double(), 'totF'=double(), 'delta'=double())
algtf<-filter(tff, algprop==alp)
#iterate on thresholds
#thresholds<-seq(min(algtf$spec),max(algtf$spec),(max(algtf$spec)-min(algtf$spec))/200)
thresholds<-seq(-1,10,0.1)
delta<-thresholds[[2]]-thresholds[[1]]
for (i in thresholds){
TP<-tally(filter(algtf, spec>i & disc==1))
FP<-tally(filter(algtf, spec>i & disc==0))
totP<-tally(filter(algtf,disc==1))
totF<-tally(filter(algtf,disc==0))
if (totP>0 & totF>0){
sums[nrow(sums)+1,]<- data.frame('FPR'=FP/totF, 'TPR'=TP/totP, 'thd'=as.numeric(i), 'totP'=totP, 'totF'=totF)
}
}
thresmax<-which.max(abs(sums$TPR-sums$FPR))
bestones <-rbind(bestones,data.frame('TPR'=sums$TPR[thresmax],'FPR'=sums$FPR[thresmax],'thd'=sums$thd[thresmax],'totP'=sums$totP[thresmax],'totF'=sums$totF[thresmax], 'alg'=al[[1]],'algprop'=as.character(alp[1]),'delta'=delta))
remove(sums,thresmax)
}
}
source('R/find_best.R')
best<-find_best(tf)
best
best$plot
bestPHF <-find_best(tf, plotName='figures/PHFbest.pdf', authors=list('PHF'))
source('R/find_best.R')
bestPHF <-find_best(tf, plotName='figures/PHFbest.pdf', authors=list('PHF'))
best<-find_best(tf, qualities=list(3,2))
bestPHF <-find_best(tf, plotName='figures/PHFbest.pdf', authors=list('PHF'))
best$plot
bestPHF$plot
best<-find_best(tf, plotName='figures/ROC.pdf',qualities=list(3,2))
bestLuc <- find_best(tf,plotName='figures/lucbest.pdf',authors=list('luc'))
source('R/find_best.R')
best<-find_best(tf, plotName='figures/ROC.pdf',qualities=list(3,2))
authors<-list(unique(tff$author))
qualities<- list(unique(sort(tff$quality)))
algtf<-filter(tf, algprop==alp & alg==al & author %in% authors & quality %in% qualities)
algtf
algtf<-filter(tf, algprop==alp & alg==al & tf$author %in% authors & tf$quality %in% qualities)
algtf
algtf<-filter(tf, algprop==alp & alg==al & tf$author %in% authors & tf$quality in qualities)
algtf<-filter(tf, algprop==alp & alg==al & author %in% authors & quality %in% qualities)
authors
for (i in authors){print(i)}
for (i in authors){print(i); print('oui')}
tf[[1]]$author
tf[1]$author
tf[1]
tf[,1]
tf[1,]
tf[1,]$author
tf[1,]$author %in% authors
match(tf[1,]$author, authors)
match(tf[1,]$author, 'luc')
tf[1,]$author in authors
tf[1,]$author %in% authors
authors
list(authors)
authors[1]
authors[2]
authors[,1]
authors[1]
split(authors, ' ')
??unique
length(authors)
??split
??strsplit
str_split(authors,' ')
strsplit(authors, ' ')
strsplit(authors, " ")
tf[! duplicated( tf[c('authors')])]
tf[! duplicated(tf$author)]
tf[! duplicated(author)]
tf[! duplicated(author),]
strsplit(authors, " ")
strsplit(authors)
authors
authors[[1]][2]
a<-list(authors[[1]])
a
a<-list(authors[[1]][1])
a
length(authors[[1]])
for (i in seq(1,length(authors[[1]])))
{print(authors[[1]][i])}
authors[[1]]$author
authors$author[[1]]
authors$Levels[[1]]
authors[[1]]
a=list()
a.append('b')
list(a,'b')
a
c<- list(a,'b')
c
c<- c(a,'b')
c
c<- c(a,'b')
c
c<- c(c,'b')
c
t(authors)
t(authors[[1]])
tf$authors$Levels
Levels(tf$authors)
summary(tf$author)
summary(tf$author)[1]
summary(tf$author)[,1]
summary(tf$author)[[1]
]
summary(tf$author)$Levels
summary(tf$author)
summary(tf$author)$levels
summary(tf$author)$
d
summary(tf$author)
summary(tf$author)[1]
colnames(summary(tf$author))
rownames(summary(tf$author))
rownames(tf$author)
colnames(tf$author)
colnames(tf)
summary(tf$authors)
summary(tf$author)
colnames(summary(tf$author))
summary(tf)
summary(tf$author)
summary(tf$author)
summary(tf$author)$coef
summary(tf$author)
unique(tf$author)
unique(tf$author)[[1]][3]
unique(tf$author)[[1]][2]
unique(tf$author)[1][2]
levels(tf$authors)
levels(unique(tf$authors)
)
levels(unique(tf$authors))
levels(summary(tf$authors))
a <- unique(unlist(tf$author))
)
levels(summary(tf$authors))
levels(summary(tf$author))
a <- unique(unlist(tf$author)))
a <- unique(unlist(tf$author)))
a <- unique(unlist(tf$author))
a
a <- unique(unlist(tf[1]))
a
a <- unique(unlist(tf[5))
a <- unique(unlist(tf[5]))
a
a <- unique(unlist(tf[3,$]))
a <- unique(unlist(tf[3,]))
a
a <- unique(unlist(tf[7,]))
a
colnames(tf
)
a <- unique(unlist(tf[4,]))
a
a <- unique(unlist(tf[3,]))
a
a <- unique(unlist(tf[2,]))
a
a <- unique(unlist(tf[1,]))
a
a <-levels(unique(tf$author))
a
source('R/find_best.R')
best<-find_best(tf, plotName='figures/ROC.pdf',qualities=list(3,2))
bestPHF <-find_best(tf, plotName='figures/PHFbest.pdf', authors=list('PHF'))
bestPHF <-find_best(tf, plotName='figures/PHFbest.pdf', authors=c('PHF'))
c('PHF')
a <-levels(unique(tf$author))
a
a[[1]]
a[[2]]
a[[3]]
c('PHF')
c<-c('PHF')
c[[1]]
bestPHF <-find_best(tf, plotName='figures/PHFbest.pdf', authors=c('PHF'))
best<-find_best(tf, plotName='figures/ROC.pdf',qualities=list(3,2))
levels(unique(tf$quality))
levels(unique(tf$quality))
unique(tf$quality)
source('R/find_best.R')
best<-find_best(tf, plotName='figures/ROC.pdf',qualities=list(3,2))
bestPHF <-find_best(tf, plotName='figures/PHFbest.pdf', authors=c('PHF'))
best<-find_best(tf, plotName='figures/ROC.pdf',qualities=c(3,2))
bestLuc <- find_best(tf,plotName='figures/lucbest.pdf',authors=c('luc'))
algtf<-filter(tf, algprop==alp & alg==al & author %in% c('luc') & quality %in% c(1,2,3))
algtf
bestPHF <-find_best(tf, plotName='figures/PHFbest.pdf', authors=c('PHF'))
bestPHF
summary(bestPHF$bestframe)
summary(bestluc$bestframe)
summary(lucbest$bestframe)
bestLuc <- find_best(tf,plotName='figures/lucbest.pdf',authors=c('luc'))
bestluc$plot
bestluc$plot
bestLuc <- find_best(tf,plotName='figures/lucbest.pdf',authors=c('luc'))
bestLuc$plot
bestPHF$plot
bestLuc <- find_best(tf,plotName='figures/lucbest.pdf',authors=c('luc'))
bestLuc$plot
bestLuc$plot
source('R/find_best.R')
bestLuc <- find_best(tf,plotName='figures/lucbest.pdf',authors=c('luc'))
bestLuc$plot
source('R/find_best.R')
bestLuc <- find_best(tf,plotName='figures/lucbest.pdf',authors=c('luc'))
bestLuc$plot
bestLuc
bestLuc$bestframe
bestPHF$bestframe
summary(bestLuc$bestframe)
summary(bestPHF$bestframe)
source('R/find_best.R')
best<-find_best(tf, plotName='figures/ROC.pdf',qualities=c(3,2))
bestPHF <-find_best(tf, plotName='figures/PHFbest.pdf', authors=c('PHF'))
bestLuc <- find_best(tf,plotName='figures/lucbest.pdf',authors=c('luc'))
remove(FP,TP,totP,totF,algtf,thresholds,al,alp)
source('R/find_best.R')
remove(c)
remove(a)
remove(tff)
bestLuc <- find_best(tf,plotName='figures/lucbest.pdf',authors=c('luc'))
bestLuc$plot
bestPHF <-find_best(tf, plotName='figures/PHFbest.pdf', authors=c('PHF'))
best<-find_best(tf, plotName='figures/ROC.pdf',qualities=c(3,2))
source('R/find_best.R')
source('R/find_best.R')
bestLuc <- find_best(tf,plotName='figures/lucbest.pdf',authors=c('luc'))
bestLuc <- find_best(tf,authors=c('luc'))
plotLuc<-plot_best(bestLuc, plotName='figures/lucbest.pdf')
best<-find_best(tf, qualities=c(3,2))
plot<-plot_best(best,plotName='figures/ROC.pdf')
bestPHF <-find_best(tf, authors=c('PHF'))
plotPHF<-plot_best(bestPHF,plotName='figures/PHFbest.pdf')
bestones<-bestluc
bestones<-bestLuc
rocplot <- ggplot(bestones, aes(bestones$FPR,bestones$TPR,color=bestones$algprop, title="Algorithms"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=rep(brewer.pal(12,"Paired"),times=2),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,3,17,18,19),each=3),name="Algorithms")+
geom_point(aes(shape=bestones$algprop,label=bestones$algprop),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
ggsave(plotName, plot=rocplot,  width=8, height=6)
plotName<-'figures/luc.pdf'
rocplot <- ggplot(bestones, aes(bestones$FPR,bestones$TPR,color=bestones$algprop, title="Algorithms"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=rep(brewer.pal(12,"Paired"),times=2),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,3,17,18,19),each=3),name="Algorithms")+
geom_point(aes(shape=bestones$algprop,label=bestones$algprop),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
ggsave(plotName, plot=rocplot,  width=8, height=6)
plotName<-'figures/phf.pdf'
bestones<-bestPHF
rocplot <- ggplot(bestones, aes(bestones$FPR,bestones$TPR,color=bestones$algprop, title="Algorithms"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=rep(brewer.pal(12,"Paired"),times=2),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,3,17,18,19),each=3),name="Algorithms")+
geom_point(aes(shape=bestones$algprop,label=bestones$algprop),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
ggsave(plotName, plot=rocplot,  width=8, height=6)
best<-find_best(tf, qualities=c(3,2))
plot<-plot_best(best,plotName='figures/ROC.pdf')
@
best<-find_best(tf, qualities=c(3,2))
plot<-plot_best(best,plotName='figures/ROC.pdf')
bestPHF <-find_best(tf, authors=c('PHF'))
plotPHF<-plot_best(bestPHF,plotName='figures/PHFbest.pdf')
@
best<-find_best(tf, qualities=c(3,2))
plot<-plot_best(best,plotName='figures/ROC.pdf')
bestLuc <- find_best(tf,authors=c('luc'))
plotLuc<-plot_best(bestLuc, plotName='figures/lucbest.pdf')
source('R/find_best.R')
best<-find_best(tf, qualities=c(3,2))
plot<-plot_best(best,plotName='figures/ROC.pdf')
bestPHF <-find_best(tf, authors=c('PHF'))
plotPHF<-plot_best(bestPHF,plotName='figures/PHFbest.pdf')
bestLuc <- find_best(tf,authors=c('luc'))
plotLuc<-plot_best(bestLuc, plotName='figures/lucbest.pdf')
best<-find_best(tf, qualities=c(3,2))
rocplot <- ggplot(best, aes(bestones$FPR,best$TPR,color=best$algprop, title="Algorithms - all authors"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=rep(brewer.pal(12,"Paired"),times=2),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,3,17,18,19),each=3),name="Algorithms")+
geom_point(aes(shape=best$algprop,label=best$algprop),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
ggsave('figures/ROD.pdf', plot=rocplot, width=8, height=6)
bestPHF <-find_best(tf, authors=c('PHF'))
rocplot <- ggplot(bestones, aes(bestPHF$FPR,bestPHF$TPR,color=bestPHF$algprop, title="Algorithms - PHF"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=rep(brewer.pal(12,"Paired"),times=2),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,3,17,18,19),each=3),name="Algorithms")+
geom_point(aes(shape=bestPHF$algprop,label=bestPHF$algprop),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
ggsave(plotName, plot=rocplot, width=8, height=6)
remove(bestones, plotName)
best<-find_best(tf, qualities=c(3,2))
rocplot <- ggplot(best, aes(bestones$FPR,best$TPR,color=best$algprop, title="Algorithms - all authors"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=rep(brewer.pal(12,"Paired"),times=2),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,3,17,18,19),each=3),name="Algorithms")+
geom_point(aes(shape=best$algprop,label=best$algprop),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
ggsave('figures/ROC.pdf', plot=rocplot, width=8, height=6)
bestPHF <-find_best(tf, authors=c('PHF'))
rocplot <- ggplot(bestones, aes(bestPHF$FPR,bestPHF$TPR,color=bestPHF$algprop, title="Algorithms - PHF"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=rep(brewer.pal(12,"Paired"),times=2),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,3,17,18,19),each=3),name="Algorithms")+
geom_point(aes(shape=bestPHF$algprop,label=bestPHF$algprop),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
ggsave('figures/PHF.pdf', plot=rocplot, width=8, height=6)
remove(bestones, plotName)
bestPHF <-find_best(tf, authors=c('PHF'))
rocplot <- ggplot(bestPHF, aes(bestPHF$FPR,bestPHF$TPR,color=bestPHF$algprop, title="Algorithms - PHF"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=rep(brewer.pal(12,"Paired"),times=2),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,3,17,18,19),each=3),name="Algorithms")+
geom_point(aes(shape=bestPHF$algprop,label=bestPHF$algprop),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
ggsave('figures/PHF.pdf', plot=rocplot, width=8, height=6)
remove(bestones, plotName)
bestPHF <-find_best(tf, authors=c('PHF'))
rocplot <- ggplot(bestPHF, aes(bestPHF$FPR,bestPHF$TPR,color=bestPHF$algprop, title="Algorithms - PHF"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=rep(brewer.pal(12,"Paired"),times=2),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,3,17,18,19),each=3),name="Algorithms")+
geom_point(aes(shape=bestPHF$algprop,label=bestPHF$algprop),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
ggsave('figures/PHF.pdf', plot=rocplot, width=8, height=6)
best<-find_best(tf, qualities=c(3,2))
rocplot <- ggplot(best, aes(bestones$FPR,best$TPR,color=best$algprop, title="Algorithms - all authors"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=rep(brewer.pal(12,"Paired"),times=2),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,3,17,18,19),each=3),name="Algorithms")+
geom_point(aes(shape=best$algprop,label=best$algprop),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
ggsave('figures/ROC.pdf', plot=rocplot, width=8, height=6)
best<-find_best(tf, qualities=c(3,2))
rocplot <- ggplot(best, aes(best$FPR,best$TPR,color=best$algprop, title="Algorithms - all authors"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=rep(brewer.pal(12,"Paired"),times=2),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,3,17,18,19),each=3),name="Algorithms")+
geom_point(aes(shape=best$algprop,label=best$algprop),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
ggsave('figures/ROC.pdf', plot=rocplot, width=8, height=6)
bestLuc <- find_best(tf,authors=c('luc'))
rocplot <- ggplot(bestLuc, aes(bestLuc$FPR,bestLuc$TPR,color=bestLuc$algprop, title="Algorithms"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=rep(brewer.pal(12,"Paired"),times=2),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,3,17,18,19),each=3),name="Algorithms")+
geom_point(aes(shape=bestLuc$algprop,label=bestLuc$algprop),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
ggsave('figures/Luc.pdf', plot=rocplot, width=8, height=6)
bestLuc <- find_best(tf,authors=c('luc'))
rocplot <- ggplot(bestLuc, aes(bestLuc$FPR,bestLuc$TPR,color=bestLuc$algprop, title="Algorithms"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=rep(brewer.pal(12,"Paired"),times=2),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,3,17,18,19),each=3),name="Algorithms")+
geom_point(aes(shape=bestLuc$algprop,label=bestLuc$algprop),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
ggsave('figures/Lucin.pdf', plot=rocplot, width=8, height=6)
bestPHF <-find_best(tf, authors=c('PHF'))
rocplot <- ggplot(bestPHF, aes(bestPHF$FPR,bestPHF$TPR,color=bestPHF$algprop, title="Algorithms - PHF"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=rep(brewer.pal(12,"Paired"),times=2),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,3,17,18,19),each=3),name="Algorithms")+
geom_point(aes(shape=bestPHF$algprop,label=bestPHF$algprop),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
ggsave('figures/PHFin.pdf', plot=rocplot, width=8, height=6)
bestLuc <- find_best(tf,authors=c('luc'))
rocplot <- ggplot(bestLuc, aes(bestLuc$FPR,bestLuc$TPR,color=bestLuc$algprop, title="Algorithms"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=rep(brewer.pal(12,"Paired"),times=2),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,3,17,18,19),each=3),name="Algorithms")+
geom_point(aes(shape=bestLuc$algprop,label=bestLuc$algprop),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
ggsave('figures/Lucin.pdf', plot=rocplot, width=8, height=6)
best<-find_best(tf, qualities=c(3,2))
rocplot <- ggplot(best, aes(best$FPR,best$TPR,color=best$algprop, title="Algorithms - all authors"))+  geom_segment(aes(x =0, y = 0, xend = 1, yend = 1), colour="#a5a5a5")+
scale_colour_manual(values=rep(brewer.pal(12,"Paired"),times=2),name="Algorithms")+
scale_shape_manual(values=rep(c(15,16,3,17,18,19),each=3),name="Algorithms")+
geom_point(aes(shape=best$algprop,label=best$algprop),size=2)+
xlab("False Positive Rate") + ylab("True Positive Rate")+
labs("ROC")
ggsave('figures/ROCin.pdf', plot=rocplot, width=8, height=6)
bestPHF
